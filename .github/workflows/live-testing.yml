name: Live Testing

on:
  workflow_call:
    inputs:
      artifact-name:
        description: 'Pylon artifact name'
        required: true
        type: string

jobs:
  live-testing:
    name: Live Testing
    runs-on: ubuntu-latest
    timeout-minutes: 3

    strategy:
      matrix:
        include:
          - mcVersion: '1.21.4'
            javaVersion: '21'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Set up JDK 21
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'adopt'
          java-version: '21'
          java-package: jdk
          architecture: x64

      - name: Setup server
        run: |
          echo 'eula=true' > eula.txt
          mkdir plugins

      - name: Download ${{ matrix.mcVersion }} Paper
        run: |
          VERSION="${{ matrix.mcVersion }}"
          if [ "$VERSION" == "latest" ]; then
            VERSION=$(curl https://api.papermc.io/v2/projects/paper/ -s | jq -r '.versions[-1]')
          fi

          BUILD_JAR=$(curl -s "https://api.papermc.io/v2/projects/paper/versions/$VERSION/builds" \
            | jq '.builds[-1] | "\(.build) \(.downloads.application.name)"' -r)
          BUILD=$(echo "$BUILD_JAR" | awk '{print $1}')
          JAR_FILE=$(echo "$BUILD_JAR" | awk '{print $2}')

          echo "Downloading... https://api.papermc.io/v2/projects/paper/versions/$VERSION/builds/$BUILD/downloads/$JAR_FILE"
          curl -o paper.jar \
            "https://api.papermc.io/v2/projects/paper/versions/$VERSION/builds/$BUILD/downloads/$JAR_FILE"

      - name: Download Pylon
        uses: actions/download-artifact@v4.1.4
        with:
          name: ${{ inputs.artifact-name }}
          path: plugins/

      - name: Run server
        run: |
          java -jar paper.jar --nogui &
          sleep 60
          kill $!
          exit 0
